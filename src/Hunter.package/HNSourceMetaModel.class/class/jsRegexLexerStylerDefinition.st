accessing
jsRegexLexerStylerDefinition
	^ #(init
		(init foreground
			('/\*' multiLineComment -> multiLineComment)
			('//.*' singleLineComment)

			('function' keyword)
			('import' keyword)
			('export' keyword)
			('arguments' keyword)
			('this' keyword)
			('let' keyword)
			('const' keyword)
			('var' keyword)
			('void' keyword)
			('yield' keyword)
			('async' keyword)
			('await' keyword)
			('delete' keyword)
			('new' keyword)
			('instanceof' keyword)
			('typeof' keyword)
			('true' keyword)
			('false' keyword)
			('null' keyword)
			('undefined' keyword)
			('alert' keyword)
			('confirm' keyword)
			('prompt' keyword)
			('if' keyword)
			('else' keyword)
			('switch' keyword)
			('do' keyword)
			('while' keyword)
			('for' keyword)
			('in' keyword)
			('of' keyword)
			('break' keyword)
			('continue' keyword)
			('case' keyword)
			('default' keyword)
			('prototype' keyword)
			('return' keyword)
			('with' keyword)
			('Array' keyword)
			('Boolean' keyword)
			('Date' keyword)
			('Function' keyword)
			('Math' keyword)
			('Number' keyword)
			('Object' keyword)
			('Regexp' keyword)
			('String' keyword)
			('try' keyword)
			('catch' keyword)
			('throw' keyword)
			('finally' keyword)
			('Error' keyword)
			('EvalError' keyword)
			('RangeError' keyword)
			('ReferenceError' keyword)
			('SyntaxError' keyword)
			('TypeError' keyword)
			('URIError' keyword)
			('abstract' keyword)
			('enum' keyword)
			('int' keyword)
			('short' keyword)
			('boolean' keyword)
			('export' keyword)
			('interface' keyword)
			('static' keyword)
			('byte' keyword)
			('extends' keyword)
			('long' keyword)
			('super' keyword)
			('char' keyword)
			('final' keyword)
			('native' keyword)
			('synchronized' keyword)
			('class' keyword)
			('float' keyword)
			('package' keyword)
			('throws' keyword)
			('goto' keyword)
			('private' keyword)
			('transient' keyword)
			('debugger' keyword)
			('implements' keyword)
			('protected' keyword)
			('volatile' keyword)
			('double' keyword)
			('import' keyword)
			('public' keyword)

			('[A-Za-z_][A-Za-z_0-9]*_t\s' type)

			('''([^\\'']|\\.)*''' string)
			('"([^\\"]|\\.)*"' string)
			('`' string -> multiLineString)

			('[A-Za-z_][A-Za-z_0-9]*' identifier)
			('[0-9]*\.[0-9]+([eE][+\-]?[0-9]+)?[A-Za-z]*' number)
			('[0-9]+[A-Za-z]*' number)
			
			('[<>]=?' operator)
			('==' operator)
			('!=' operator)
			('[+-/*%&|^]=?' operator)
			('<<=' operator)
			('>>=' operator)
			('=' operator)
			('!' operator)
			('~' operator)
			('\?' operator)
			('::' operator)
			
			('\s+' space)
		)
	
		(multiLineComment multiLineComment
			('\*/' multiLineComment -> init)
		)
		
		(multiLineString string
			('`' string -> init)
		)
	).